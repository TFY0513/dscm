<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.84.0">
    <title>View Durian</title>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/dashboard/">

    <link href="product.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css" rel="stylesheet">

    <!-- CSS -->


    <!-- JavaScript -->

    <style>
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
        }

        @media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }
    </style>



</head>
<%- include('../authentication/authorized'); %>
    <%- include('../authentication/clientRole'); %>

        <body>
            <%- include('../partials/home_navbar'); %>
                <%- include('../partials/home_sidebar'); %>
                    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
                    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
                    <script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script type="text/javascript"
                        src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
                    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                        <div
                            class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                            <h1 class="h2">Durian Available</h1>
                        </div>

                        <section class="section-products">
                            <div class="container">
                                <div class="row justify-content-center text-center">
                                    <div class="col-md-8 col-lg-6">
                                        <div class="header">

                                            <h2>Featured Durians</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="durianList">
                                    <!-- Single Product -->

                                    <!-- Single Product -->

                                </div>
                            </div>
                        </section>
                    </main>

                    <div class="modal fade" id="buyDurianModal" tabindex="-1" role="dialog"
                        aria-labelledby="myModalLabel">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="myModalLabel">Purchase Conformation</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <h5>Are you sure want to purchase this durian?</h5>
                                </div>
                                <div class="modal-footer" id="modal-footer">
                                    <button type="button" class="btn btn-secondary" onclick="closePopUp()"
                                        data-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary" id="buyBtn">Purchase</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    <%- include('../partials/scroll_button'); %>


                        <script>
                            const ABI = JSON.parse(localStorage.getItem("UserABI"));
                            const Address = localStorage.getItem("UserAddress")
                            const DurianABI = JSON.parse(localStorage.getItem("DurianABI"));
                            const DurianAddress = localStorage.getItem("DurianAddress")
                            let globalID, globalPrice;
                            // // Get the modal and the placeholders for the data
                            // const modal = document.getElementById('buyDurianModal');
                            // const priceDisplay = modal.querySelector('#price');
                            // const idDisplay = modal.querySelector('#durainIDSelected');

                            // // Listen for the modal to be shown
                            // modal.addEventListener('show.bs.modal', function (event) {
                            //     // Get the button that triggered the modal
                            //     const button = event.relatedTarget;

                            //     // Retrieve the data from the button's data attributes
                            //     const price = button.getAttribute('data-price');
                            //     const name = button.getAttribute('data-id');


                            //     // console.log(button);
                            //     // Update the modal content with the retrieved data
                            //     priceDisplay.textContent = price;
                            //     idDisplay.textContent = name;
                            // });


                            const showDurian = async () => {
                                const accounts = await ethereum.request({ method: "eth_requestAccounts" });
                                account = accounts[0];
                                window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
                                window.UserContract = await new window.web3.eth.Contract(DurianABI, DurianAddress); //how you create an instance of that contract by using the abi and address  
                                let durianID, durianTreeID, durianType, weight, process, price;
                                var currentProcess;

                                var index = await window.UserContract.methods.displayIndex().call();

                                //  console.log(index);
                                if (index != 0) {
                                    for (var i = 0; i < index; i++) {//each durian

                                        var durian = await window.UserContract.methods.getBlock(i).call();
                                        console.log(durian.length);

                                        console.log("current blocck lenght: " + durian.length);
                                        price = "-";
                                        // console.log(durian[1][4]);

                                        if (durian.length > 1) {
                                            if (durian.length > 2) {
                                                price = durian[2][6][0];
                                            }

                                            var currDurindex = durian.length - 1;

                                            // console.log("come in "  + currDurindex);
                                            // console.log(durian);
                                            currentProcess = durian[currDurindex][4];

                                            const date = new Date(durian[1][3] * 1000); // Multiply by 1000 to convert from seconds to milliseconds
                                            arriveTime = date.toLocaleString(); // Convert to local time string


                                        }
                                        else {
                                            console.log("reejected");
                                            currentProcess = durian[0][4];
                                            arriveTime = "-";


                                        }


                                        durianID = durian[0][6][0];
                                        durianTreeID = durian[0][6][1];
                                        durianType = durian[0][6][2];
                                        weight = durian[0][6][3];
                                        const date = new Date(durian[0][3] * 1000); // Multiply by 1000 to convert from seconds to milliseconds
                                        harvestTime = date.toLocaleString(); // Convert to local time string


                                        switch (currentProcess) {
                                            case "0":
                                                process = "HARVEST";
                                                break;
                                            case "1":
                                                process = "DELIVERED";
                                                break;
                                            case "2":
                                                process = "PREPARED";

                                                break;
                                            case "3":
                                                process = "PURCHASE";
                                                break;
                                            case "4":
                                                process = "RATING";
                                                break;
                                            default:
                                                process = "COMPLETED";
                                                break;
                                        }


                                        if (parseInt(currentProcess) >= 2) {//the durian is prepared 


                                            if (parseInt(currentProcess) >= 3) {//sold alr

                                            }
                                            else {
                                                console.log("Durianb:" + i);
                                                var parentDiv = document.createElement("div");
                                                parentDiv.classList.add("col-md-6", "col-lg-4", "col-xl-3");

                                                var newDiv = document.createElement("div");
                                                newDiv.id = 'product-1';
                                                newDiv.classList.add("single-product");

                                                var newDiv2 = document.createElement("div");
                                                newDiv2.classList.add("part-1");

                                                var newUL = document.createElement("ul");
                                                var newLi = document.createElement("li");

                                                //     var newP = document.createElement("h6");

                                                //     newP.setAttribute('data-toggle', 'modal');
                                                //    // newP.setAttribute('data-target', '#buyDurianModal');
                                                //     newP.setAttribute('price', price);
                                                //     newP.setAttribute('id', i);
                                                //     newP.addEventListener("click", showPopUp(i, price));

                                                var button = document.createElement("button");

                                                button.setAttribute('data-toggle', 'modal');
                                                button.classList.add("btn", "btn-outline-primary");
                                                button.innerHTML = "Buy";
                                                button.setAttribute("onclick", "showPopUp(" + i + ", " + price + ")");
                                                // console.log("price "+price);
                                                // button.addEventListener("click", function () {
                                                //     showPopUp(i);
                                                // });

                                                // // newP.setAttribute('data-target', '#buyDurianModal');
                                                // newP.setAttribute('price', price);
                                                // newP.setAttribute('id', i);
                                                // newP.addEventListener("click", showPopUp(i, price));



                                                // var imgElement = document.createElement('img');
                                                // imgElement.src = 'shopcartIcon.png';
                                                // imgElement.width = '40';

                                                // newP.appendChild(imgElement);

                                                // Append the p element to the li element
                                                newLi.appendChild(button);

                                                // Append the li element to the ul element
                                                newUL.appendChild(newLi);

                                                newDiv2.appendChild(newUL);


                                                var newDiv3 = document.createElement("div");
                                                newDiv3.classList.add("part-2");

                                                var header3 = document.createElement("h3");
                                                header3.classList.add("product-title");
                                                header3.innerHTML = durianType + " (ID: " + durianID + ")";
                                                var header4 = document.createElement("h4");
                                                header4.classList.add("product-title");
                                                header4.innerHTML = "Weight: " + parseInt(weight).toFixed(2) + " kg";
                                                var header6 = document.createElement("h3");
                                                header6.classList.add("product-price");
                                                header6.setAttribute('id', durianID);
                                                header6.innerHTML = price + "<img src='Ether.png' width='50'>";

                                                newDiv3.appendChild(header3);
                                                newDiv3.appendChild(header4);
                                                newDiv3.appendChild(header6);

                                                newDiv.appendChild(newDiv2);
                                                newDiv.appendChild(newDiv3);

                                                parentDiv.appendChild(newDiv);

                                                var myDiv = document.getElementById("durianList");
                                                myDiv.appendChild(parentDiv);




                                            }

                                        }



                                        console.log("succeess")

                                    }


                                }

                            }
                            showDurian();

                            function closePopUp() {
                                $('#buyDurianModal').modal('hide');

                            }


                            function showPopUp(i, price) {
                                $('#buyDurianModal').modal('show');
                                console.log(i + "|" + price);
                                globalID = i;
                                globalPrice = price;
                            }


                            document.getElementById('buyBtn').addEventListener('click', function (e) {
                                e.preventDefault();

                                buyDurian(globalID, globalPrice);


                            });

                            const buyDurian = async (globalID, price) => {
                                const accounts = await ethereum.request({ method: "eth_requestAccounts" });
                                clientAccount = accounts[0];
                                window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
                                window.UserContract = await new window.web3.eth.Contract(ABI, Address); //how you create an instance of that contract by using the abi and address  
                                console.log(clientAccount);
                                const sellerAddress = localStorage.getItem("retailerAddress");
                                console.log(sellerAddress);

                                await window.UserContract.methods.purchase(sellerAddress).send({
                                    from: clientAccount,
                                    value: web3.utils.toWei('20', 'ether'),
                                    to: sellerAddress
                                });

                              

                           


                            }

                        </script>