<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Hugo 0.84.0">
    <title>View Durian</title>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/dashboard/">

    <link href="rating.css" rel="stylesheet">
    <link href="rateShow.css" rel="stylesheet">

    <link href="https://cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css" rel="stylesheet">

    <!-- CSS -->


    <!-- JavaScript -->

    <style>
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
        }

        @media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }
    </style>



</head>
<%- include('../authentication/authorized'); %>
    <%- include('../authentication/retailerRole'); %>

        <body>
            <%- include('../partials/home_navbar'); %>
                <%- include('../partials/home_sidebar'); %>
                    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
                    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
                    <script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script type="text/javascript"
                        src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
                    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                        <div
                            class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                            <h1 class="h2">Durian Management</h1>
                        </div>
                        <h4 class="h4">View Durian </h4>
                        <div class="col d-flex justify-content-center">
                            <div class="card" style="width:100%; ">
                                <div class="card-body">

                                    <table id="table" class="table ">
                                        <thead>
                                            <tr>
                                                <th scope="col">Durian ID</th>
                                                <th scope="col">Durian Type</th>
                                                <th scope="col">Durian Tree ID</th>
                                                <th scope="col">Durian Weight(KG)</th>
                                                <th scope="col">Process</th>
                                                <th scope="col">Harvest Time</th>
                                                <th scope="col">Arrive Time</th>
                                                <th scope="col">Price(Ether)</th>
                                                <th scope="col">Rating</th>
                                                <th scope="col">Setting</th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            <!-- <td scope="col" id="durianID">13221323</td>
                                                <td id="durianType">HHHH</td>
                                                <td id="durianTreeID">eqqwewqweweq</td>
                                                <td id="durianWeight">100.00</td>
                                                <td id="process">Harvested</td>
                                                <td id="harvestTime">11.11ppm</td>
                                                <td scope="col">
                                                    <button class=" btn btn-outline-secondary  " data-toggle="modal"
                                                        data-target="#settingDurianModal">Setting
                                                    </button>

                                                </td> -->




                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th scope="col">Durian ID</th>
                                                <th scope="col">Durian Type</th>
                                                <th scope="col">Durian Tree ID</th>
                                                <th scope="col">Durian Weight(KG)</th>
                                                <th scope="col">Process</th>
                                                <th scope="col">Harvest Time</th>
                                                <th scope="col">Arrive Time</th>
                                                <th scope="col">Price(Ether)</th>
                                                <th scope="col">Rating</th>
                                                <th scope="col">Setting</th>

                                                </button></th>


                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </main>


                    <div class="modal fade" id="settingDurianModal" tabindex="-1" role="dialog"
                        aria-labelledby="myModalLabel">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="myModalLabel">Set Price Modal</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                    <form target="dummyframe">


                                        <div class="row g-3">


                                            <!-- <div style="padding-left:20px; padding-right:20px;" class="col-6">
                                                <h4 class="mb-3">Durian ID</h4>
                                                <input type="input" class="form-control" id="durianID" maxlength="15"
                                                    placeholder="XX.XX" disabled>
                                            </div> -->



                                            <div style="padding-left:20px; padding-right:20px;" class="col-12">
                                                <h4 class="mb-3">Price (<img src="Ether.png" width="40">)</h4>
                                                <input type="input" class="form-control" id="price" maxlength="5"
                                                    placeholder="XX" required>
                                                <span class="text-danger text-left priceErr" id="priceErr"></span>
                                                <p style="text-decoration: underline; color: blue;" onclick="info()"> ?
                                                </p>
                                            </div>


                                        </div><br />
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                                        onclick="closePopUp()">Close</button>

                                    <button type="button" class="btn btn-success" id="sellDurianBtn">Retail</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="modal fade" id="ratingModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-dialog" role="document" style="  max-width: 1000px;">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="myModalLabel">Rating</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">

                                    <div style="margin-left:20px; margin-right:20px; " class="card">
                                        <div class="card-body">
                                            <h4 class="card-title">Rating & Comment</h4>
                                            <h6 class="card-subtitle" id="userDetail"></h6>
                                        </div>

                                        <div class="comment-widgets m-b-20">

                                            <div class="d-flex flex-row comment-row">

                                                <div class="comment-text w-100">
                                                    <div class="rating">
                                                        <input type="radio" name="getRating" id="rate5" value="5"><label
                                                            for="5">☆</label>
                                                        <input type="radio" name="getRating" id="rate4" value="4"><label
                                                            for="4">☆</label>
                                                        <input type="radio" name="getRating" id="rate3" value="3"><label
                                                            for="3">☆</label>
                                                        <input type="radio" name="getRating" id="rate2" value="2"><label
                                                            for="2">☆</label>
                                                        <input type="radio" name="getRating" id="rate1" value="1"><label
                                                            for="1">☆</label>
                                                    </div>
                                                    <textarea id="getComment" class="form-control" name="homeAddress"
                                                        rows="4" maxlength="200" required="required" disabled
                                                        placeholder="Comment" cols="50"></textarea>
                                                    <!-- <div class="comment-footer">
                                                        <span class="date">2222</span>
                                                        <span class="label label-info">Project Task :
                                                           22 </span>
                                                        <span style="margin-left:10px;" class="label label-success">222</span>
                                                    </div>
                                                    <p class="m-b-5 m-t-10">222</p> -->

                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" onclick="closeReview()" class="btn btn-secondary"
                                        data-dismiss="modal">Close</button>

                                </div>
                            </div>
                        </div>
                    </div>


                    <%- include('../partials/scroll_button'); %>


                        <script>
                            const ABI = JSON.parse(localStorage.getItem("UserABI"));
                            const Address = localStorage.getItem("UserAddress")

                            const DurianABI = JSON.parse(localStorage.getItem("DurianABI"));
                            const DurianAddress = localStorage.getItem("DurianAddress")
                            let globalID;

                            const showDurian = async () => {
                                const accounts = await ethereum.request({ method: "eth_requestAccounts" });
                                account = accounts[0];
                                window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
                                window.UserContract = await new window.web3.eth.Contract(DurianABI, DurianAddress); //how you create an instance of that contract by using the abi and address  
                                let durianID, durianTreeID, durianType, weight, process, harvestTime, arriveTime, price, rate, comment;
                                var currentProcess;

                                var index = await window.UserContract.methods.displayIndex().call();
                                //  console.log(index);
                                if (index != 0) {
                                    for (var i = 0; i < index; i++) {//each durian
                                        var durian = await window.UserContract.methods.getBlock(i).call();
                                        rate = "";
                                        comment = "";

                                        console.log("current blocck lenght: " + durian.length);
                                        price = "-";
                                        // console.log(durian[1][4]);

                                        if (durian.length > 1) {

                                            if (durian.length > 2) {
                                                price = durian[2][6][0];
                                            }



                                            // if (durian.length > 3) {

                                            // }

                                            var currDurindex = durian.length - 1;

                                            // console.log("come in "  + currDurindex);
                                            // console.log(durian);
                                            currentProcess = durian[currDurindex][4];

                                            const date = new Date(durian[1][3] * 1000); // Multiply by 1000 to convert from seconds to milliseconds
                                            arriveTime = date.toLocaleString(); // Convert to local time string
                                            durianID = durian[0][6][0];
                                            durianTreeID = durian[0][6][1];
                                            durianType = durian[0][6][2];
                                            weight = durian[0][6][3];
                                            const date2 = new Date(durian[0][3] * 1000); // Multiply by 1000 to convert from seconds to milliseconds
                                            harvestTime = date2.toLocaleString(); // Convert to local time string
                                            switch (currentProcess) {
                                                case "0":
                                                    process = "HARVEST";
                                                    break;
                                                case "1":
                                                    process = "DELIVERED";
                                                    break;
                                                case "2":
                                                    process = "PREPARED";

                                                    break;
                                                case "3":
                                                    process = "PURCHASE";
                                                    break;
                                                case "4":
                                                    process = "RATING";
                                                    break;
                                                default:
                                                    process = "COMPLETED";
                                                    break;
                                            }

                                            if (parseInt(currentProcess) == 1) {
                                                $(document).ready(function () {
                                                    var t = $('#table').DataTable();

                                                    t.row.add([durianID, durianTreeID, durianType, weight, process, harvestTime, arriveTime, price, " -",

                                                        "<button class=' btn btn-outline-secondary' data-toggle='modal'  onclick='showPopUp(" + i + ")' >Retail </button>"]).draw(false);
                                                });

                                            }
                                            else if (parseInt(currentProcess) > 3) {//got rate
                                                rate = durian[4][6][0];
                                                comment = durian[4][6][1];
                                                $(document).ready(function () {
                                                    var t = $('#table').DataTable();


                                                    t.row.add([durianID, durianTreeID, durianType, weight, process, harvestTime, arriveTime, price, "-",
                                                        "<button class=' btn btn-outline-secondary' data-toggle='modal'  onclick='displayReview(" + i + ")' >View </button>"]).draw(false);

                                                });
                                            }
                                            else {//no rate
                                                $(document).ready(function () {
                                                    var t = $('#table').DataTable();


                                                    t.row.add([durianID, durianTreeID, durianType, weight, process, harvestTime, arriveTime, price, "-", ""]).draw(false);

                                                });
                                            }
                                        }
                                        else {
                                            console.log("reejected");
                                            currentProcess = durian[0][4];
                                            arriveTime = "-";


                                        }



                                        console.log("succeess")

                                    }

                                }


                            }
                            showDurian();

                            function closePopUp() {
                                $('#settingDurianModal').modal('hide');

                            }


                            function showPopUp(data) {
                                $('#settingDurianModal').modal('show');
                                console.log(data);
                                globalID = data;
                            }

                            function closeReview() {
                                $('#ratingModal').modal('hide');

                            }

                            const displayReview = async (index) => {
                                window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
                                window.UserContract = await new window.web3.eth.Contract(DurianABI, DurianAddress); //how you create an instance of that contract by using the abi and address  
                                var durian = await window.UserContract.methods.getBlock(--index).call();


                                $('#ratingModal').modal('show');


                                let ratingValue = parseInt(durian[4][6][0]); // default rating value
                                var name = "rate" + ratingValue;
                                console.log(name);
                                document.getElementById(name).checked = true;
                                document.getElementById("rate1").disabled = true;
                                document.getElementById("rate2").disabled = true;
                                document.getElementById("rate3").disabled = true;
                                document.getElementById("rate4").disabled = true;
                                document.getElementById("rate5").disabled = true;

                                document.getElementById("getComment").value = durian[4][6][1];

                                console.log(durian[4][5]);

                                window.UserContract = await new window.web3.eth.Contract(ABI, Address); //how you create an instance of that contract by using the abi and address  
                                var user = await window.UserContract.methods.retrieveProfile(durian[4][5]).call();

                                const date = new Date(durian[4][3] * 1000); // Multiply by 1000 to convert from seconds to milliseconds
                                const ratingDate = date.toLocaleString(); // Convert to local time string

                                document.getElementById("userDetail").innerHTML = "User: " + user[1] + "<br/> Rating Date Made: "+ratingDate;

                                console.log(user[1]);
                            }

                            function info() {
                                Swal.fire({
                                    title: 'Pricing Format',
                                    text: 'The pricing format must follow Ether Format without decimal places',
                                    icon: 'info',
                                    confirmButtonText: 'OK'
                                });
                            }



                            document.getElementById('sellDurianBtn').addEventListener('click', function (e) {
                                e.preventDefault();

                                var price = document.getElementById("price").value;

                                if (validateSetting(price)) {
                                    sellDurian(price);
                                }

                            });

                            const sellDurian = async (price) => {

                                --globalID;
                                console.log(globalID);
                                const accounts = await ethereum.request({ method: "eth_requestAccounts" });
                                account = accounts[0];
                                window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
                                window.UserContract = await new window.web3.eth.Contract(DurianABI, DurianAddress); //how you create an instance of that contract by using the abi and address  
                                console.log(price)


                                var data = [price];
                                console.log(data)

                                try {

                                    await window.UserContract.methods.appendDurianBlock(globalID, data, account).send({ from: account });
                                    Swal.fire({
                                        title: 'Durian Delivered Succesful',
                                        text: 'You may view the durian',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then(function () {
                                        window.location.href = '/retailerViewDurian';
                                    });
                                } catch (error) {
                                    if (error.message.includes("revert")) {
                                        Swal.fire({
                                            title: 'Durian Delivered Failed',
                                            text: 'The process is already in other phrase',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });

                                    }
                                    else {
                                        Swal.fire({
                                            title: 'Durian Delivered Failed',
                                            text: 'Unknown Error',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }

                                }
                            }




                            function validateSetting(price) {
                                var valid = true;

                                const regexPrice = /^\d{1,13}(\.\d{1,2})?$/g;
                                // const regexPrice = /^\d+$/;



                                if (!regexPrice.test(price)) {
                                    //  document.getElementById("durianTreeIdErr").innerHTML = "Invalid Durian Tree ID";
                                    document.querySelector('.priceErr').innerHTML = "Invalid Pricing Format";
                                    valid = false;
                                    return;
                                }
                                else {
                                    document.querySelector(".priceErr").innerHTML = "";
                                    valid = true;
                                }



                                return valid;
                            }


                            $(document).ready(function () {
                                $('#table').DataTable();
                            });


                        </script>