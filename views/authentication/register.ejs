<%- include('../partials/authentication_header'); %>

<%- include('../authentication/guest'); %>
	<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.0.2/sha.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


	<body class="text-center">
		<main class="form-signin">
			<iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
			<form target="dummyframe">

				<input type="hidden" name="_token" value="{{ csrf_token() }}" />
				<img class="mb-4" src="logo-transparent.png" alt="" width="200">

				<h1 class="h3 mb-3 fw-normal">Register</h1>
				<div class="alert alert-warning" id="message" role="alert" style="display: none;">
					<ul class="list-unstyled mb-0">

						<li id="contentErr"></li>

					</ul>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="email" class="form-control" id="email" name="email" value="" maxlength="30"
						placeholder="name@example.com" required="required" autofocus>
					<label for="floatingEmail">Email address</label>

					<span class="text-danger text-left"></span>

				</div>

				<div class="form-group form-floating mb-3">
					<input type="text" class="form-control" id="username" name="username" value="" maxlength="20"
						placeholder="Username" required="required" autofocus>
					<label for="floatingName">Username</label>
					<span id="usernameErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="password" class="form-control" id="password" name="password" value=""
						placeholder="Password" maxlength="50" required="required">
					<label for="floatingPassword">Password</label>
					<small>Minimum length is 6 and must contain atleast 1 uppercase, lowercase, special character
						and
						numeric number </small><br />
					<span id="passwordErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="password" class="form-control" id="confirm_password" name="password_confirmation"
						value="" maxlength="50" placeholder="Confirm Password" required="required">
					<label for="floatingConfirmPassword">Confirm Password</label>
					<span id="conPassErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="text" class="form-control" id="firstName" name="firstName" value=""
						placeholder="First Name" maxlength="30" required="required">
					<label for="floatingPassword">First Name</label>
					<span id="firstNameErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="text" class="form-control" id="lastName" name="lastName" value=""
						placeholder="Last Name" maxlength="30" required="required">
					<label for="floatingPassword">Last Name</label>
					<span id="lastNameErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<input type="text" class="form-control" id="contactNum" name="contactNum" value=""
						placeholder="Contact Number" maxlength="20" required="required">
					<label for="floatingPassword">Contact Number</label>
					<span id="contactNumErr" class="text-danger text-left"></span>
				</div>

				<div class="form-group form-floating mb-3">
					<textarea id="homeAddress" class="form-control" name="homeAddress" rows="4" maxlength="200"
						required="required" placeholder="Home address" cols="50"></textarea>


					<label for="floatingPassword">Address</label>

					<span id="contactNumErr" class="text-danger text-left"></span>

				</div>



				<a href="/login">Login</a><br /><br />
				<button class="w-100 btn btn-lg btn-primary" type="submit" onclick="register()">Register</button>

				<%- include('../partials/authentication_footer'); %>
			</form>
		</main>

	</body>

	<script>
		const ABI = JSON.parse(localStorage.getItem("UserABI"));
		const Address = localStorage.getItem("UserAddress")

		const register = async () => {

			var email = document.getElementById("email").value;
			var username = document.getElementById("username").value;
			var password = document.getElementById("password").value;
			var confirmPassword = document.getElementById("confirm_password").value;
			var firstName = document.getElementById("firstName").value;
			var lastName = document.getElementById("lastName").value;
			var contactNum = document.getElementById("contactNum").value;
			var location = document.getElementById("homeAddress").value;
			// console.log(location);
			if (email != "" && username != "" && password != "" && confirmPassword != "" && firstName != "" && lastName != "" && contactNum != "" && location != "") {
				{
					if (validate(email, username, password, confirmPassword, firstName, lastName, contactNum)) {
						var hashObj = new jsSHA("SHA-512", "TEXT", { numRounds: 1 });
						hashObj.update(password);
						var hash = hashObj.getHash("HEX");
						password = hash;

						let userID = Math.floor((Math.random() * 10000000) + 1);


						const accounts = await ethereum.request({ method: "eth_requestAccounts" });
						account = accounts[0];
						window.web3 = await new Web3(window.ethereum); //how to access to smart contract 
						window.UserContract = await new window.web3.eth.Contract(ABI, Address); //how you create an instance of that contract by using the abi and address 

						try {
							await window.UserContract.methods.register(userID, firstName, lastName, email, username, password, contactNum, "Clients", location).send({ from: account });


							const data = await window.UserContract.methods.retrieveProfile(username).call();

							const person = {
								userID: data[0], firstName: data[1], lastName: data[2], email: data[3], username: data[4],
								contactNum: data[5], role: data[6], dateJoined: data[7], profile_pic: data[8], wallet: data[9]
							};
							const personJsonFormat = JSON.stringify(person);

							localStorage.setItem("user", personJsonFormat);

							//  console.log("locate storage data: " + localStorage.getItem("user"));
							//   console.log("json data: " + personJson);

							var x = document.getElementById("message");
							x.style.display = "none";
							Swal.fire({
								title: 'Registration Succesful',
								text: 'Your account has been registered successfully, you will automatically login',
								icon: 'success',
								confirmButtonText: 'OK'
							}).then(function () {
								window.location.href = '/home';
							});
						} catch (error) {
							// registration failed, render error message

							console.log("Erorr:<br/>" + error.message);

							if (error.message.includes("revert")) {
								Swal.fire({
									title: 'Registration Failed',
									text: 'The email or username or wallet already exist.',
									icon: 'error',
									confirmButtonText: 'OK'
								});

							}
							else {
								Swal.fire({
									title: 'Registration Failed',
									text: 'Unknown Error',
									icon: 'error',
									confirmButtonText: 'OK'
								});
							}
							// var x = document.getElementById("message");
							// x.style.display = "block";



							// document.getElementById("contentErr").innerHTML = "The email or username or wallet already exist.";
							//  res.render('register', { error: error.message });
						}

				



					}
				}







			}

			function validate(email, username, password, confirmPassword, firstName, lastName, contactNum) {
				var valid = true;



				const regexUsername = /^[a-zA-Z0-9]+$/;
				const regexPass = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$/;
				const regexFirstLastName = /^[a-zA-Z ]+$/;
				const regexContact = /^(\+?6?01)[0-46-9]-*[0-9]{7,8}$/u;


				if (!regexUsername.test(username)) {
					document.getElementById("usernameErr").innerHTML = "Invalid username";
					valid = false;
				}
				else {
					document.getElementById("usernameErr").innerHTML = "";
					valid = true;
				}


				// if (!regexPass.test(password)) {
				//     document.getElementById("passwordErr").innerHTML = "Invalid password";
				//     valid = false;
				// }
				// else {
				//     document.getElementById("passwordErr").innerHTML = "";
				//     valid = true;
				// }

				if (password != confirmPassword) {
					document.getElementById("conPassErr").innerHTML = "Password not match with confirm password";
					valid = false;
				}
				else {
					document.getElementById("conPassErr").innerHTML = "";
					valid = true;
				}


				if (!regexFirstLastName.test(firstName)) {
					document.getElementById("firstNameErr").innerHTML = "Invalid firstname";
					valid = false;
				}
				else {
					document.getElementById("firstNameErr").innerHTML = "";
					valid = true;
				}

				if (!regexFirstLastName.test(lastName)) {
					document.getElementById("lastNameErr").innerHTML = "Invalid lastname";
					valid = false;
				}
				else {
					document.getElementById("lastNameErr").innerHTML = "";
					valid = true;
				}


				if (!regexContact.test(contactNum)) {
					document.getElementById("contactNumErr").innerHTML = "Invalid contact number";
					valid = false;
				}
				else {
					document.getElementById("contactNumErr").innerHTML = "";
					valid = true;
				}
				return valid;
			}
		}
	</script>

	</html>